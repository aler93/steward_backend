networks:
  steward_rede:
    driver: bridge

volumes:
  steward_volume:
  steward_cache:

services:
  steward_nginx_proxy:
    image: nginx
    container_name: steward_proxy
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    networks:
      - steward_rede
    volumes:
      - ./docker-config/nginx/site.conf:/etc/nginx/conf.d/site.conf
      - ./docker-logs/nginx:/var/log/nginx
      - .:/app
    command: /bin/bash -c "envsubst '$${$http_upgrade},$${$host}' < /etc/nginx/conf.d/site.conf> /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - steward_api

  steward_api:
    image: aler/php-fpm:8.3
    build:
      context: .
      dockerfile: Dockerfile
    container_name: steward_api
    restart: unless-stopped
    networks:
      - steward_rede
    volumes:
      - ./docker-logs/aplicacao:/app/storage/logs
      - ./docker-logs/filas:/var/log/steward
      - .:/app
    #logging:
      #driver: json_file

  steward_scheduler:
    image: aler/php-fpm:8.3
    container_name: steward_scheduler
    restart: unless-stopped
    networks:
      - steward_rede
    volumes:
      - ./docker-logs/aplicacao:/app/storage/logs
      - ./docker-logs/filas:/var/log/steward
      - .:/app
    entrypoint: ["php", "artisan", "schedule:work"]
    #logging:
      #driver: json_file

  steward_db:
    image: postgres:13
    container_name: steward_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: 'America/Fortaleza'
    volumes:
      - steward_volume:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - steward_rede
    #logging:
      #driver: json_file
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=1GB"

  steward_redis:
    image: redis:alpine
    container_name: steward_redis
    restart: unless-stopped
    networks:
      - steward_rede
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - steward_cache:/data
    entrypoint: redis-server --requirepass ${REDIS_PASSWORD}

  steward_reverb:
    image: aler/php-fpm:8.3
    container_name: steward_reverb
    restart: unless-stopped
    networks:
      - steward_rede
    ports:
      - ${REVERB_PORT}:8010
    volumes:
      - ./docker-logs/aplicacao:/app/storage/logs
      - ./docker-logs/filas:/var/log/steward
      - .:/app
    entrypoint: ["php", "artisan", "reverb:start", "--port=8010"]
